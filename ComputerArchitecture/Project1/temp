



# new line
la	$a0, new_line
li	$v0, 4
syscall

# out of loop when we got 10 numbers
la	$t0, array
li  $t1, 0            # int i
li	$t2, 0            # int min
li	$t3, 0            # int max
li  $t4, 0            # float avg

# loop all numbers in array
loop:
# condition to terminate loop
sltiu $t7, $t1, 10
beq   $t7, $0,  end

# load current value to $t5
lw    $t5, ($t0)

# print current value
la	$a0, cur_val
li	$v0, 4
syscall

addu $a0, $0, $t5
li   $v0, 1
syscall

# new line
la	$a0, new_line
li	$v0, 4
syscall

# figure out min $t2
movz $t2, $t5, $t1
beqz $t5, val_zero

slt  $t6, $t5, $t2

# print comparison result
la	$a0, lt_res
li	$v0, 4
syscall

addu $a0, $0, $t6
li   $v0, 1
syscall

# new line
la	$a0, new_line
li	$v0, 4
syscall

movn  $t2, $t5, $t6

val_zero:

# print current min
la	$a0, cur_min
li	$v0, 4
syscall

addu $a0, $0, $t2
li   $v0, 1
syscall

# new line
la	$a0, new_line
li	$v0, 4
syscall

# check if greater than max $t3
slt  $t6, $t3, $t5
movn  $t3, $t5, $t6

# print current max
la	$a0, cur_max
li	$v0, 4
syscall

addu $a0, $0, $t3
li   $v0, 1
syscall

# new line
la	$a0, new_line
li	$v0, 4
syscall

# sum current val for avg $t4
addu $t4, $t4, $t5
# advance $t0 by 4
addiu	$t0, $t0, 4
# i++
addiu $t1, $t1, 1

# print current avg sum
la	$a0, cur_sum
li	$v0, 4
syscall

addu $a0, $0, $t4
li   $v0, 1
syscall

# new line
la	$a0, new_line
li	$v0, 4
syscall
syscall

j loop
end:
# calc avg
div $t4, $10



# ------------ PRINT RESULTS -----------
# print string "Array Details"
la	$a0, output
li	$v0, 4
syscall

# tab
la	$a0, tab_line
li	$v0, 4
syscall

# print string "min"
la	$a0, output_min
li	$v0, 4
syscall

# print min
addu $a0, $0, $t2
li   $v0, 1
syscall

# new line
la	$a0, new_line
li	$v0, 4
syscall

# tab
la	$a0, tab_line
li	$v0, 4
syscall

# print string "max"
la	$a0, output_max
li	$v0, 4
syscall

# print max
addu $a0, $0, $t3
li   $v0, 1
syscall

# new line
la	$a0, new_line
li	$v0, 4
syscall

# tab
la	$a0, tab_line
li	$v0, 4
syscall

# print string "avg"
la	$a0, output_avg
li	$v0, 4
syscall